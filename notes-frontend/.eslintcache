[{"/Users/dvanlani/Library/Notes-App/notes-frontend/src/index.tsx":"1","/Users/dvanlani/Library/Notes-App/notes-frontend/src/App.tsx":"2","/Users/dvanlani/Library/Notes-App/notes-frontend/src/BodyColComponents/BodyColumn.tsx":"3","/Users/dvanlani/Library/Notes-App/notes-frontend/src/ListColComponents/ListColumn.tsx":"4","/Users/dvanlani/Library/Notes-App/notes-frontend/src/ListColComponents/NoteListItem.tsx":"5","/Users/dvanlani/Library/Notes-App/notes-frontend/src/fetchurls.tsx":"6","/Users/dvanlani/Library/Notes-App/notes-frontend/src/ListColComponents/CreateNoteInput.tsx":"7","/Users/dvanlani/Library/Notes-App/notes-frontend/src/BodyColComponents/BodyColumnHeader.tsx":"8","/Users/dvanlani/Library/Notes-App/notes-frontend/src/BodyColComponents/ExpandButton.tsx":"9"},{"size":234,"mtime":1609255965453,"results":"10","hashOfConfig":"11"},{"size":1976,"mtime":1609353896652,"results":"12","hashOfConfig":"11"},{"size":1744,"mtime":1609353283153,"results":"13","hashOfConfig":"11"},{"size":2170,"mtime":1609355013368,"results":"14","hashOfConfig":"11"},{"size":525,"mtime":1609258513274,"results":"15","hashOfConfig":"11"},{"size":79,"mtime":1608668056937,"results":"16","hashOfConfig":"11"},{"size":1687,"mtime":1609350728516,"results":"17","hashOfConfig":"11"},{"size":1170,"mtime":1609353961868,"results":"18","hashOfConfig":"11"},{"size":453,"mtime":1609353426222,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4i92ef",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dvanlani/Library/Notes-App/notes-frontend/src/index.tsx",[],["40","41"],"/Users/dvanlani/Library/Notes-App/notes-frontend/src/App.tsx",[],"/Users/dvanlani/Library/Notes-App/notes-frontend/src/BodyColComponents/BodyColumn.tsx",["42"],"/Users/dvanlani/Library/Notes-App/notes-frontend/src/ListColComponents/ListColumn.tsx",[],"/Users/dvanlani/Library/Notes-App/notes-frontend/src/ListColComponents/NoteListItem.tsx",[],"/Users/dvanlani/Library/Notes-App/notes-frontend/src/fetchurls.tsx",[],"/Users/dvanlani/Library/Notes-App/notes-frontend/src/ListColComponents/CreateNoteInput.tsx",["43"],"import React, { useEffect, useState } from 'react'\nimport { Form, FormGroup, Input } from 'reactstrap'\nimport apiUrl from '../fetchurls'\n\nfunction CreateNoteInput(props: any) {\n    const { setSelectedNoteID, setCreateNote, setNotes } = props\n    const [inputValue, setInputValue] = useState(\"\")\n    const [noteCreated, setNoteCreated] = useState(false)\n\n    const handleChange = (event: any) => {\n        setInputValue(event.target.value)\n    }\n\n    const handleEnter = (event: any) => {\n        if (event.keyCode === 13) {\n            event.preventDefault()\n            \n            const noteData = {\n                title: inputValue\n            }\n\n            fetch(apiUrl, {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": 'application/json'\n                },\n                body: JSON.stringify(noteData)\n            })\n            .then(data => data.json())\n            .then(response => {\n                setNoteCreated(!noteCreated)\n                setSelectedNoteID(response.id)\n                setCreateNote(false)\n            })\n        }\n\n        if (event.keyCode === 27) {\n            setCreateNote(false)\n        }\n    }\n\n    useEffect(() => {\n        fetch(apiUrl)\n        .then(data => data.json())\n        .then(response => setNotes(response))\n    }, [noteCreated])\n\n    return (\n        <Form>\n            <FormGroup>\n                <Input \n                type=\"text\" \n                placeholder=\"New note...\" \n                value={inputValue}\n                onChange={handleChange}\n                onKeyDown={handleEnter}></Input>\n            </FormGroup>\n        </Form>\n    )\n}\n\nexport default CreateNoteInput","/Users/dvanlani/Library/Notes-App/notes-frontend/src/BodyColComponents/BodyColumnHeader.tsx",[],"/Users/dvanlani/Library/Notes-App/notes-frontend/src/BodyColComponents/ExpandButton.tsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":28,"column":8,"nodeType":"50","endLine":28,"endColumn":24,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":46,"column":8,"nodeType":"50","endLine":46,"endColumn":21,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.selectedNoteID'. Either include it or remove the dependency array.","ArrayExpression",["56"],"React Hook useEffect has a missing dependency: 'setNotes'. Either include it or remove the dependency array.",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [props.selectedNoteID, selectedNoteID]",{"range":"62","text":"63"},"Update the dependencies array to be: [noteCreated, setNotes]",{"range":"64","text":"65"},[942,958],"[props.selectedNoteID, selectedNoteID]",[1319,1332],"[noteCreated, setNotes]"]